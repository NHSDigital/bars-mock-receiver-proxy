openapi: 3.0.0
info:
  description: |
    ## Overview
    Use this API to send booking and referral information between NHS service providers.

    You can:
      * Get a specific booking
      * Get bookings for a patient
      * Process a message
      * Get message definition
      * Get capability statement
      * Get a specific referral
      * Get referral/s for a patient
      * Get slots

    The following describes the end-to-end process:
    1. Send a request from your sender application to this API, along with a service identifier header.
    2. This API redirects the request to the service associated with the service identifier header.
    3. The target backend handles the request and sends a response back to this API.
    4. This API returns the response to your sender application.

    ## Who can use this API
    This API can only be used where there is a legal basis to do so. Make sure you have a valid use case before you go too far with your development. You must do this before you can go live.

    ## API status and roadmap
    This API is in [alpha](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#api-status), meaning:
      * it is available for testing in integration environment
      * we expect to make breaking changes based on developer feedback

    ### Roadmap
    To see our roadmap, or to suggest, comment or vote on features for this API, see our [interactive product backlog](https://nhs-digital-api-management.featureupvote.com/?order=popular&filter=allexceptdone&tag=booking-and-referral&deleted=0#controls).
    If you have any other queries, please [contact us](https://digital.nhs.uk/developer/help-and-support).

    ## Technology
    The API is [RESTful](https://digital.nhs.uk/developer/guides-and-documentation/api-technologies-at-nhs-digital#basic-rest).

    This API uses HTTP POST to submit data.

    The data payload conforms to the [FHIR](https://digital.nhs.uk/developer/guides-and-documentation/api-technologies-at-nhs-digital#fhir) global standard for health care data exchange.
    Specifically, it is aligned with [FHIR UK Core](https://digital.nhs.uk/services/fhir-uk-core), which is built on FHIR Release 4.

    ## Network access
    This API is available on the internet.

    For more details, see [Network access for APIs](https://digital.nhs.uk/developer/guides-and-documentation/network-access-for-apis).

    ## Security and authorisation

    This API is [application-restricted](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#application-restricted-apis),
    meaning we authenticate the calling application but not the end user.

    You can use this access mode as follows:
    * unattended (end user not present)

    To use this access mode, use the following security pattern:
    * [application-restricted RESTful API - signed JWT authentication](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/application-restricted-restful-apis-signed-jwt-authentication)

    For more details, see [BaRS Core - Security and authorisation](https://digital.nhs.uk/developer/api-catalogue/booking-and-referral-standard-implementation-guide/bars-core#security-and-authorisation)

    ## Environments and testing
    | Environment       | Base URL                                                               |
    | ----------------- | ---------------------------------------------------------------------- |
    | Sandbox           | `https://sandbox.api.service.nhs.uk/booking-and-referral/FHIR/R4`        | 
    | Integration test  | `https://int.api.service.nhs.uk/booking-and-referral/FHIR/R4`          |
    | Production        | Not yet available                                                      |

    Our [integration test environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing) is for formal integration testing

    For more details see [integration testing with our RESTful APIs](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing-with-our-restful-apis).

    ## Register on our platform    
    Details on the onboarding process can be found in our [Quick start guide](https://digital.nhs.uk/developer/api-catalogue/booking-and-referral-standard-implementation-guide#quick-start-guide).
  version: 1.0.8
  title: Booking and Referral API
  termsOfService: 'https://developer.nhs.uk/apis/uec-appointments'
  contact:
    email: uec.appointmentbooking@nhs.net
    url: 'https://developer.nhs.uk/apis/uec-appointments'
    name: NHS Digital
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://sandbox.api.service.nhs.uk/booking-and-referral/FHIR/R4'
    description: Sandbox Server
  - url: 'https://int.api.service.nhs.uk/booking-and-referral/FHIR/R4'
    description: Integration Server
tags:
  - name: Booking
  - name: Message
  - name: Metadata
  - name: Referral
  - name: Slots
security:
  - OAuth_Token: []
paths:
  /metadata:
    parameters:
      - $ref: '#/components/parameters/RequestId_HParam'
      - $ref: '#/components/parameters/CorrelationId_HParam'
      - $ref: '#/components/parameters/TargetIdentifier_HParam'
    get:
      tags:
        - Metadata
      summary: Get capability statement
      description: |
        
        ### Returns the target endpoints capability statement 

        The sender must initially request the receiver's capability statement (GET /metadata) to establish how to interact with the receivers API (its capabilities). If the receiver does not support BaRS functionality the BaRS API will provide an error response indicating this and the sender pursues an alternative workflow. 

        A receiver can only implement a subset of the functionality within the standard and the capability statement will make this clear to a sender. 

        What is returned is a server level response to indicate what functionality the target API supports and how to interact with it. 
      operationId: getMeta
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/Capability'
              example:
                $ref: examples/metadata/GET-success.json
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/Capability'
          headers:
            X-Correlation-Id:
              description: 'The X-Correlation-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: 9562466f-c982-4bd5-bb0e-255e9f5e6689
            X-Request-Id:
              description: 'The X-Request-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: c1ab3fba-6bae-4ba4-b257-5a87c44d4a91
        4XX:
          $ref: '#/components/responses/4XX-BARS'
        5XX:
          $ref: '#/components/responses/5XX-BARS'
  /MessageDefinition:
    parameters:
      - $ref: '#/components/parameters/RequestId_HParam'
      - $ref: '#/components/parameters/CorrelationId_HParam'
      - $ref: '#/components/parameters/TargetIdentifier_HParam'
    get:
      tags:
        - Metadata
      summary: Get Message Definition
      description: |
        
        ### Returns MessageDefinitions supported by the target endpoint.

        The Message Definition retrieval is required to inform a Sender on building the payload. A request is made using the Service Identifier and workflow type values, linking to the useContext and event elements, respectively, in the Message Definition resource, returning a list of FHIR resources. 
        
        The order of workflow beyond this point is relatively flexible, the only stipulation being responses occurring after requests.

        ### Sender
        
        The request for Message Definition is the next step for a Sender following the metadata acquisition. 
        The sender must request the Message Definition for the Service Identifier obtained previously, along with the type of workflow type e.g. booking-request, servicerequest-request. The Message Definition will contain a list of FHIR resources which the sender must include when making a booking or referral. 
        
        ### Receiver

        A receiver dictates what they need from a sender making a request and the MessageDefinition is the mechanism to support this. The Message Definition details what FHIR resources need to be included in the body (payload).
        The receiver may support multiple services e.g. Out-of-Hours, Clinical Assessment Service under one organisation (on the same system) and consideration should be given to maintaining service identifiers and workflow type against Message Definitions.  It's advisable to make this a configurable option which providers can maintain themselves as new services come onboard.
      operationId: getMessageDefinition
      parameters:
        - $ref: '#/components/parameters/context_QParam'
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/MessageDefinition'
              example: 
                $ref: examples/message_definition/MessageDefinition_ ServiceRequest-request_CaseTransfer.json
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/MessageDefinition'
          headers:
            X-Correlation-Id:
              description: 'The X-Correlation-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: 9562466f-c982-4bd5-bb0e-255e9f5e6689
            X-Request-Id:
              description: 'The X-Request-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: c1ab3fba-6bae-4ba4-b257-5a87c44d4a91
        4XX:
          $ref: '#/components/responses/4XX-BARS'
        5XX:
          $ref: '#/components/responses/5XX-BARS'
  /$process-message:
    parameters:
      - $ref: '#/components/parameters/TargetIdentifier_HParam'
      - $ref: '#/components/parameters/RequestId_HParam'
      - $ref: '#/components/parameters/CorrelationId_HParam'
      - $ref: '#/components/parameters/RequestingOrganisation_HParam'
      - $ref: '#/components/parameters/RequestingPractitioner_HParam'
      - $ref: '#/components/parameters/RequestingPerson_HParam'
      - $ref: '#/components/parameters/RequestingDevice_HParam'
    post:
      tags:
        - Message
      summary: Process a message
      description: |
        
        ### Using $process-message
        The inherent flexibility of the various workflows supported by BaRS is facilitated by the $process-message endpoint. The example in the "Try this API" feature for this endpoint is a referral request.

        ### Function
        | Function| API Call|Description
        | ----                              | ----                   | ----                 |
        | Making a referral request         | POST /$process-message | The sender will POST a FHIR Bundle, including the FHIR resources defined in MessageDefinition requested previously, the 'focus' being a ServiceRequest resource, supported by Encounter, Observation, Flag etc. The MessageHeader resource will indicate the activity required through use of 'event', 'reason' and 'focus' data elements.<cr> The MessageHeader resource will indicate the activity required. An example of this can be found [here.](https://simplifier.net/NHSBookingandReferrals/79120f41-a431-4f08-bcc5-1e67006fcae0/~json)|
        | Respond to a referral             | POST /$process-message | A receiver wanting to respond to a request will direct their response to the Sender's $process-message endpoint, reversing the previous request/response roles. All implementers (senders or receivers) of BaRS must build a $process-message endpoint to be able to support the asynchronous workflows which involve such feedback responses. An example of this can be found [here.](https://simplifier.net/nhsbookingandreferrals/bc040878-cf51-4acf-9ede-7448fbb5be7c-duplicate-2)|
        | Cancelling a referral             | POST /$process-message | An updated payload request ensuring the status of the service request is set to 'revoked', as a minimum.An example of this can be found [here.](https://simplifier.net/nhsbookingandreferrals/a961e68a-50e9-4988-9b14-4bfa4629d761)|
        | Making a booking                  | POST /$process-message | Once a slot has been identified, the sender makes a request to book through the $process-message endpoint. The receivers MessageDefinition defines the required FHIR resources and must including reference to the service request, if applicable. The MessageHeader resource will indicate the activity required.An example of this can be found [here.](https://simplifier.net/nhsbookingandreferrals/777a156c-af3c-4748-a8a3-7e95e4b0df9a)|
        | Respond to a booking              | POST /$process-message | A sender may receive a response to a booking they've made, for example, where a patient fails to attend. The original receiver (now the sender, in effect) will respond to the original sender (now the receiver) with an updated payload to reflect the current state of the booking e.g. DNA.|
        | Cancelling a booking (and rebook) | POST /$process-message | An updated payload request ensuring the status of the appointment is set to 'cancelled', as a minimum.|

        for more information on processing requests, please see the guidance within our [End-to-End Workflow](https://digital.nhs.uk/developer/api-catalogue/booking-and-referral-standard-implementation-guide/bars-core#end-to-end-workflow) documentation.

      operationId: processMessage
      requestBody:
        description: Message Details
        required: true
        content:
          application/fhir+json:
            schema:
              $ref: '#/components/schemas/MessageBundle'
            example:
              $ref: examples/process_message/POST-body.json
          application/fhir+xml:
            schema:
              $ref: '#/components/schemas/MessageBundle'
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/MessageBundle'
              example:
                $ref: examples/process_message/POST-success.json
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/MessageBundle'
          headers:
            X-Correlation-Id:
              description: 'The X-Correlation-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: 9562466f-c982-4bd5-bb0e-255e9f5e6689
            X-Request-Id:
              description: 'The X-Request-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: c1ab3fba-6bae-4ba4-b257-5a87c44d4a91
        4XX:
          $ref: '#/components/responses/4XX-BARS'
        5XX:
          $ref: '#/components/responses/5XX-BARS'
  /Slot:
    parameters:
      - $ref: '#/components/parameters/RequestId_HParam'
      - $ref: '#/components/parameters/CorrelationId_HParam'
      - $ref: '#/components/parameters/TargetIdentifier_HParam'
      - $ref: '#/components/parameters/RequestingOrganisation_HParam'
      - $ref: '#/components/parameters/RequestingPractitioner_HParam'
      - $ref: '#/components/parameters/RequestingPerson_HParam'
      - $ref: '#/components/parameters/RequestingDevice_HParam'
    get:
      tags:
        - Slots
      summary: Get slots
      description: |

        ### Get available slots.

        A call to Slots is for querying a target endpoint for suitable slots to book a new Appointment into for a patient. 
        A request for slots support various filter parameters but requires the service identifier, slot status(es) and a timeframe to limit the search. 
        
        As documented in the [NHS Booking Standard](https://developer.nhs.uk/apis/uec-appointments/fs_slotmanagement.html), a receiver assigns the service identifier to groups of slots, under a schedule, which ties schedules together for a particular service.

        
      operationId: getSlots
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - free
                - busy
              default: free
        - name: start
          in: query
          required: true
          description: |
            Slot start date/time (yyyy-mm-ddThh:mm:ss).
            To search for time windows within which Slots must start, use “greater than” and “less than” searching.
            
            For example "GET [base]Slot?start=ge2022-03-01T12:00:00+00&start=le2022-03-01T13:30:00+00". 
            The definition of the time window within which Slots are requested is provided by using this parameter twice.
          schema:
            format: datetime
            type: string
            example: '2020-03-31T14:00:00'
        - name: Schedule.actor:HealthcareService
          in: query
          required: true
          description: |
            Identifier for the intended healthcare service
          schema:
            type: string
            example: '918999198999'
        - name: _include
          in: query
          description: |
            Inclusions that drive the rescusive depth of the search

            |Inclusion           |Description|
            |-------             | --------|
            | Schedule           | Include Schedule Resources referenced within the  Slot Resources|
            | Practitioner       | Include Practitioner Resources referenced within the  Schedule Resources|
            | PractitionerRole   | Include Practitioner Role Resources referenced within the  Schedule Resources |
            | HealthcareService  | Include HealthcareService Resources referenced within the  Schedule Resources|
            | ProvidedBy         | Include Organization Resources referenced within the  HealthcareService Resources|
            | Location           | Include Location Resources referenced within the  HealthcareService Resources|
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - Schedule
                - 'Schedule:actor:Practitioner'
                - 'Schedule:actor:PractitionerRole'
                - 'Schedule:actor:HealthcareService'
                - 'HealthcareService:providedBy'
                - 'HealthcareService:location'
                - 'Slot:*'
      responses:
        '200':
          description: Success. A full example of a Slot Searchset response can be found [here](  https://simplifier.net/NHSBookingandReferrals/777a156c-af3c-4748-a8a3-7e95e4b0df9a-duplicate-2).
          content:
            application/fhir+json:
              schema:
                $ref: schemas/SearchBundleSlot.yaml
              example:
                $ref: examples/slots/GET-success.json
            application/fhir+xml:
              schema:
                $ref: schemas/SearchBundleSlot.yaml
          headers:
            X-Correlation-Id:
              description: 'The X-Correlation-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: 9562466f-c982-4bd5-bb0e-255e9f5e6689
            X-Request-Id:
              description: 'The X-Request-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: c1ab3fba-6bae-4ba4-b257-5a87c44d4a91
        4XX:
          $ref: '#/components/responses/4XX-BARS'
        5XX:
          $ref: '#/components/responses/5XX-BARS'
  /Appointment:
    parameters:
      - $ref: '#/components/parameters/RequestId_HParam'
      - $ref: '#/components/parameters/CorrelationId_HParam'
      - $ref: '#/components/parameters/TargetIdentifier_HParam'
      - $ref: '#/components/parameters/RequestingOrganisation_HParam'
      - $ref: '#/components/parameters/RequestingPractitioner_HParam'
      - $ref: '#/components/parameters/RequestingPerson_HParam'
      - $ref: '#/components/parameters/RequestingDevice_HParam'
    get:
      tags:
        - Booking
      summary: Get bookings for a patient
      description: |
        
        ### Returns bookings for a specified patient.
        Use this endpoint to get all bookings for a given patient. All bookings for the specified patient at the specified target endpoint will be returned. 
        
        If a sender wants to cancel a particular booking, they must perform a read first, comparing and amending the details prior to performing the update.
      operationId: getBookingByPatient
      parameters:
        - $ref: '#/components/parameters/PatientId_QParam'
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: schemas/SearchBundleAppt.yaml
              example:
                $ref: examples/appointment/GET-success.json
            application/fhir+xml:
              schema:
                $ref: schemas/SearchBundleAppt.yaml
          headers:
            X-Correlation-Id:
              description: 'The X-Correlation-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: 9562466f-c982-4bd5-bb0e-255e9f5e6689
            X-Request-Id:
              description: 'The X-Request-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: c1ab3fba-6bae-4ba4-b257-5a87c44d4a91
        4XX:
          $ref: '#/components/responses/4XX-BARS'
        5XX:
          $ref: '#/components/responses/5XX-BARS'
  '/Appointment/{id}':
    parameters:
      - $ref: '#/components/parameters/RequestId_HParam'
      - $ref: '#/components/parameters/CorrelationId_HParam'
      - $ref: '#/components/parameters/TargetIdentifier_HParam'
      - $ref: '#/components/parameters/RegistryId_Param'
      - $ref: '#/components/parameters/RequestingOrganisation_HParam'
      - $ref: '#/components/parameters/RequestingPractitioner_HParam'
      - $ref: '#/components/parameters/RequestingPerson_HParam'
      - $ref: '#/components/parameters/RequestingDevice_HParam'
    get:
      tags:
        - Booking
      summary: Get a specific booking
      description: | 
        
        ### Returns specific booking by id
        Use this endpoint to get a specific booking by its unique id. A booking with the specified identifier at the specified target endpoint will be returned, should it exist. 
        
        If a sender wants to cancel a booking, they must perform a read first, comparing and amending the details prior to performing the update.

      operationId: getBooking
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: schemas/Appointment.yaml
              example:
                $ref: examples/appointment/id/GET-success.json
            application/fhir+xml:
              schema:
                $ref: schemas/Appointment.yaml
          headers:
            X-Correlation-Id:
              description: 'The X-Correlation-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: 9562466f-c982-4bd5-bb0e-255e9f5e6689
            X-Request-Id:
              description: 'The X-Request-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: c1ab3fba-6bae-4ba4-b257-5a87c44d4a91
        4XX:
          $ref: '#/components/responses/4XX-BARS'
        5XX:
          $ref: '#/components/responses/5XX-BARS'
  /ServiceRequest:
    parameters:
      - $ref: '#/components/parameters/RequestId_HParam'
      - $ref: '#/components/parameters/CorrelationId_HParam'
      - $ref: '#/components/parameters/TargetIdentifier_HParam'
      - $ref: '#/components/parameters/RequestingOrganisation_HParam'
      - $ref: '#/components/parameters/RequestingPractitioner_HParam'
      - $ref: '#/components/parameters/RequestingPerson_HParam'
      - $ref: '#/components/parameters/RequestingDevice_HParam'
    get:
      tags:
        - Referral
      summary: Get referral/s for a patient
      description: |
        
        ### Returns service requests for a specified patient.
        
        Use this endpoint to get all service requests for a given patient. All service requests for the specified patient at the specified target endpoint will be returned. 
        
        If a sender wants to cancel a service request, they must perform a read first and amend the response version when updating.
      operationId: getReferralByPatient
      parameters:
        - $ref: '#/components/parameters/PatientId_QParam'
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: schemas/SearchBundleRef.yaml
              example:
                $ref: examples/service_request/GET-success.json
            application/fhir+xml:
              schema:
                $ref: schemas/SearchBundleRef.yaml
          headers:
            X-Correlation-Id:
              description: 'The X-Correlation-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: 9562466f-c982-4bd5-bb0e-255e9f5e6689
            X-Request-Id:
              description: 'The X-Request-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: c1ab3fba-6bae-4ba4-b257-5a87c44d4a91
        4XX:
          $ref: '#/components/responses/4XX-BARS'
        5XX:
          $ref: '#/components/responses/5XX-BARS'
  '/ServiceRequest/{id}':
    parameters:
      - $ref: '#/components/parameters/RegistryId_Param'
      - $ref: '#/components/parameters/RequestId_HParam'
      - $ref: '#/components/parameters/CorrelationId_HParam'
      - $ref: '#/components/parameters/TargetIdentifier_HParam'
      - $ref: '#/components/parameters/RequestingOrganisation_HParam'
      - $ref: '#/components/parameters/RequestingPractitioner_HParam'
      - $ref: '#/components/parameters/RequestingPerson_HParam'
      - $ref: '#/components/parameters/RequestingDevice_HParam'
    get:
      tags:
        - Referral
      summary: Get a specific referral
      description: | 
        
        ### Returns specific service request by id
        Use this endpoint to get a specific service request by its unique id. A service request with the specified identifier at the specified target endpoint will be returned, should it exist. 
        
        If a sender wants to cancel a service request, they must perform a read first, comparing and amending the details prior to performing the update.

      operationId: getReferral
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: schemas/ServiceRequest.yaml
              example:
                $ref: examples/service_request/id/GET-success.json
            application/fhir+xml:
              schema:
                $ref: schemas/ServiceRequest.yaml
          headers:
            X-Correlation-Id:
              description: 'The X-Correlation-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: 9562466f-c982-4bd5-bb0e-255e9f5e6689
            X-Request-Id:
              description: 'The X-Request-Id from the request header, if supplied, mirrored back.'
              schema:
                type: string
                format: uuid
                example: c1ab3fba-6bae-4ba4-b257-5a87c44d4a91
        4XX:
          $ref: '#/components/responses/4XX-BARS'
        5XX:
          $ref: '#/components/responses/5XX-BARS'
components:
  parameters:
    RegistryId_Param:
      name: id
      description: The identifier of the registry object.
      in: path
      schema:
        type: string
        format: uuid
        example: c3f6145e-1a26-4345-b3f2-dccbcba62049
      required: true
      allowEmptyValue: false
    context_QParam: 
      name: context
      description: |
       The target service identifier. Allowing the ability to filter returned message definitions by the specified service id. In this example a DoS id.
      required: false
      in: query
      schema:
        type: string
        example: "2000099999"
    PatientId_QParam: 
      name: patient:identifier
      description: |
       The patient's NHS number. The primary identifier of a patient across systems, unique to NHS England and Wales.

       |Type           |Expression|
       |-------             | --------|
       |[token](https://hl7.org/implement/standards/FHIR/search.html#token) |Appointment.participant.actor:identifier |
      required: true
      in: query
      schema:
        type: string
        example: https://fhir.nhs.uk/Id/nhs-number:4857773456
    TargetIdentifier_HParam:
      name: NHSD-Target-Identifier
      description: The identifier of the Target system (to be Base64 encoded).
      required: true
      in: header
      schema:
        $ref: '#/components/schemas/TargetIdentifier'
    RequestingDevice_HParam:
      name: NHSD-Requesting-Software
      description: The identifer of the Sending System (Standard Base64 encoded JSON).
      required: false
      in: header
      schema:
        $ref: '#/components/schemas/RequestingSoftwareToken'
    RequestingPerson_HParam:
      name: NHSD-Requesting-Person
      description: The identifer of the Sending Person (Standard Base64 encoded JSON).
      required: false
      in: header
      schema:
        $ref: '#/components/schemas/RequestingPersonToken'
    RequestingOrganisation_HParam:
      name: NHSD-End-User-Organisation
      description: The identifer of the Sending Organisation (Standard Base64 encoded JSON).
      required: false
      in: header
      schema:
        $ref: '#/components/schemas/RequestingOrganisationToken'
    RequestingPractitioner_HParam:
      name: NHSD-Requesting-Practitioner
      description: The identifer of the Sending System User (Standard Base64 encoded JSON).
      required: false
      in: header
      schema:
        $ref: '#/components/schemas/RequestingPractitionerToken'
    RequestId_HParam:
      name: X-Request-Id
      description: 'The X-Request-Id from the request header, if supplied, mirrored back.'
      required: true
      in: header
      schema:
        type: string
        format: uuid
        example: c1ab3fba-6bae-4ba4-b257-5a87c44d4a91
    CorrelationId_HParam:
      name: X-Correlation-Id
      description: 'The X-Correlation-Id from the request header, if supplied, mirrored back.'
      required: true
      in: header
      schema:
        type: string
        format: uuid
        example: 9562466f-c982-4bd5-bb0e-255e9f5e6689
  responses:
    4XX-BARS:
      description: |
        Below are examples of potential HTTP status codes and their associated error codes, which could be returned in the event of a fault. 
        Guidance on error handling within BaRS can be found [here](https://digital.nhs.uk/developer/api-catalogue/booking-and-referral-standard-implementation-guide/bars-core#error-handling).

        | HTTP status | Error code                 | Description |
        | ----------- | -------------------------- | --------------------------------------------- |
        | 400         | SEND_BAD_REQUEST           | The API was unable to process the request. |
        | 400         | REC_BAD_REQUEST            | The Receiver has responded stating the message was malformed. |
        | 401         | SEND_UNAUTHORIZED          | The API deemed you unauthorized to make this request. |
        | 401         | REC_UNAUTHORIZED           | The receiver deemed you unauthorized to make request. |
        | 403         | SEND_FORBIDDEN             | Missing or Expired Token. |
        | 404         | PROXY_NOT_FOUND            | No related people exist for given NHS number. |
        | 404         | REC_NOT_FOUND              | Patient record for given NHS number has been invalidated and not superseded by another NHS number. |
        | 405         | SEND_METHOD_NOT_ALLOWED    | HTTP Verb is not correct for this scenario.|
        | 405         | REC_METHOD_NOT_ALLOWED     | Receiver does not allow this.|
        | 405         | PROXY_METHOD_NOT_ALLOWED   | Proxy does not allow this.|
        | 406         | SEND_NOT_ACCEPTABLE        | Senders message had an incorrect content type defined for a response.|
        | 408         | REC_TIMEOUT                | The downstream domain processing has not completed within the configured timeout period. |
        | 409         | SEND_CONFLICT              |  |
        | 409         | REC_CONFLICT               |  |
        | 409         | PROXY_CONFLICT             |  |
        | 422         | SEND_UNPROCESSABLE_ENTITY  | Message was not malformed but deemed unprocessable. |
        | 422         | REC_UNPROCESSABLE_ENTITY   | Message was not malformed but deemed unprocessable. |         
        | 422         | PROXY_UNPROCESSABLE_ENTITY | Message was not malformed but deemed unprocessable. |         
        | 429         | SEND_TOO_MANY_REQUESTS     | The user has sent too many requests in a given amount of time|
        | 429         | REC_TOO_MANY_REQUESTS      | The user has sent too many requests in a given amount of time|

      content:
        application/fhir+json:
          schema:
            $ref: '#/components/schemas/OperationalOutcome'
          example:
            $ref: examples/400-SEND.json
      headers:
        X-Correlation-Id:
          description: 'The X-Correlation-Id from the request header, if supplied, mirrored back.'
          schema:
            type: string
            format: uuid
            example: 9562466f-c982-4bd5-bb0e-255e9f5e6689
        X-Request-Id:
          description: 'The X-Request-Id from the request header, if supplied, mirrored back.'
          schema:
            type: string
            format: uuid
            example: c1ab3fba-6bae-4ba4-b257-5a87c44d4a91
    5XX-BARS:
      description: |
        Below are examples of potential HTTP status codes and their associated error codes, which could be returned in the event of a fault. 
        Guidance on error handling within BaRS can be found [here](https://digital.nhs.uk/developer/api-catalogue/booking-and-referral-standard-implementation-guide/bars-core#error-handling).

        | HTTP status | Error code                 | Description |
        | ----------- | -------------------------- | --------------------------------------------- |
        | 500         | REC_SERVER_ERROR           | The receiver server has encountered an Error processing the request. |
        | 500         | PROXY_SERVER_ERROR         | Proxy Error. |
        | 501         | SEND_NOT_IMPLEMENTED       | The Request was not recognized. |
        | 501         | REC_NOT_IMPLEMENTED        | The Receiver did not recognize the request. |
        | 501         | PROXY_NOT_IMPLEMENTED      | The Proxy did not recognize the request. |
        | 503         | REC_UNAVAILABLE            | The Receiver was unavailable to service the request.|
        | 503         | PROXY_UNAVAILABLE          | The Proxy was unavailable to service the request. |

      content:
        application/fhir+json:
          schema:
            $ref: '#/components/schemas/OperationalOutcome'
          example:
            $ref: examples/500-REC.json
      headers:
        X-Correlation-Id:
          description: 'The X-Correlation-Id from the request header, if supplied, mirrored back.'
          schema:
            type: string
            format: uuid
            example: 9562466f-c982-4bd5-bb0e-255e9f5e6689
        X-Request-Id:
          description: 'The X-Request-Id from the request header, if supplied, mirrored back.'
          schema:
            type: string
            format: uuid
            example: c1ab3fba-6bae-4ba4-b257-5a87c44d4a91
  schemas:
    Capability:
      $ref: schemas/Capability.yaml
    TargetIdentifier:
      $ref: schemas/TargetIdentifier.yaml
    MessageBundle:
      $ref: schemas/MessageBundle.yaml
    MessageDefinition:
      $ref: schemas/MessageDefinition.yaml
    OperationalOutcome:
      $ref: schemas/OperationalOutcome.yaml
    RequestingOrganisationToken:
      $ref: schemas/RequestingOrganisation.yaml
    RequestingPractitionerToken:
      $ref: schemas/RequestingPractitioner.yaml
    RequestingPersonToken:
      $ref: schemas/RequestingPerson.yaml
    RequestingSoftwareToken:
      $ref: schemas/RequestingSoftware.yaml
  securitySchemes:
    OAuth_Token:
      type: http
      scheme: bearer
